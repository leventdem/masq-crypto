!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).MasqCrypto=e()}}(function(){return function o(a,u,s){function c(t,e){if(!u[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(h)return h(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var i=u[t]={exports:{}};a[t][0].call(i.exports,function(e){return c(a[t][1][e]||e)},i,i.exports,o,a,u,s)}return u[t].exports}for(var h="function"==typeof require&&require,e=0;e<s.length;e++)c(s[e]);return c}({1:[function(e,t,n){"use strict";var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}}(e("./utils.js"));var i=["aes-cbc","aes-gcm","aes-ctr"],o=[128,192,256],u=function(e,t,n){return crypto.subtle.decrypt(n,t,e).then(function(e){return new Uint8Array(e)})},s=function(e,t,n){return crypto.subtle.encrypt(n,t,e).then(function(e){return new Uint8Array(e)})},c=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.mode=e.mode||"aes-gcm",this.keySize=e.keySize||128,this.IV=e.iv||null,this.key=e.key||null,this.length=e.length||128,this.additionalData=e.additionalData||""}return r(t,[{key:"checkRaw",value:function(n,r){return new Promise(function(e,t){r instanceof Uint8Array?n.importKeyRaw(r).then(e):e(r)})}},{key:"exportKeyRaw",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this._key,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"raw";return crypto.subtle.exportKey(t,e).then(function(e){return new Uint8Array(e)})}},{key:"importKeyRaw",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"raw";return crypto.subtle.importKey(t,e,{name:this.mode},!0,["encrypt","decrypt","wrapKey","unwrapKey"])}},{key:"decrypt",value:function(e){var t={},n={};if(t.ciphertext=e.hasOwnProperty("ciphertext")?a.hexStringToBuffer(e.ciphertext):"","aes-gcm"===this.mode)return t.iv=e.hasOwnProperty("iv")?a.hexStringToBuffer(e.iv):"",t.additionalData=e.hasOwnProperty("version")?a.toArray(e.version):[],n.name=this.mode,n.iv=t.iv,n.additionalData=t.additionalData,this.checkRaw(this,this.key).then(function(e){return u(t.ciphertext,e,n)}).then(function(e){return a.toString(e)});if("aes-cbc"===this.mode)return t.iv=e.hasOwnProperty("iv")?a.hexStringToBuffer(e.iv):"",n.name=this.mode,n.iv=t.iv,this.checkRaw(this,this.key).then(function(e){return u(t.ciphertext,e,n)}).then(function(e){return a.toString(e)});if("aes-ctr"===this.mode)return t.iv=e.hasOwnProperty("iv")?a.hexStringToBuffer(e.iv):"",n.name=this.mode,n.counter=t.iv,n.length=this.length,this.checkRaw(this,this.key).then(function(e){return u(t.ciphertext,e,n)}).then(function(e){return a.toString(e)});throw new Error("The mode "+this.mode+" is not yet supported")}},{key:"encrypt",value:function(e){var t={},n={};if(t.plaintext=a.toArray(e),"aes-gcm"===this.mode)return t.iv=this.iv||window.crypto.getRandomValues(new Uint8Array(12)),t.additionalData=a.toArray(this.additionalData),n.name=this.mode,n.iv=t.iv,n.additionalData=t.additionalData,this.checkRaw(this,this.key).then(function(e){return s(t.plaintext,e,n)}).then(function(e){return{ciphertext:a.bufferToHexString(e),iv:a.bufferToHexString(t.iv),version:a.toString(t.additionalData)}});if("aes-cbc"===this.mode)return t.iv=this.iv||window.crypto.getRandomValues(new Uint8Array(16)),n.name=this.mode,n.iv=t.iv,this.checkRaw(this,this.key).then(function(e){return s(t.plaintext,e,n)}).then(function(e){return{ciphertext:a.bufferToHexString(e),iv:a.bufferToHexString(t.iv)}});if("aes-ctr"===this.mode)return t.iv=this.iv||window.crypto.getRandomValues(new Uint8Array(16)),n.name=this.mode,n.counter=t.iv,n.length=this.length,this.checkRaw(this,this.key).then(function(e){return s(t.plaintext,e,n)}).then(function(e){return{ciphertext:a.bufferToHexString(e),iv:a.bufferToHexString(t.iv)}});throw new Error("The mode "+this.mode+" is not yet supported")}},{key:"genAESKey",value:function(){return crypto.subtle.generateKey({name:this.mode||"aes-gcm",length:this.keySize||128},!0,["decrypt","encrypt"])}},{key:"wrapKey",value:function(t,n,r){var i=this,o=window.crypto.getRandomValues(new Uint8Array(12));return this.checkRaw(this,this.key).then(function(e){return crypto.subtle.wrapKey(r||"raw",t,e,{name:i.mode||"aes-gcm",iv:o,additionalData:a.toArray("")})}).then(function(e){return{encryptedMasterKey:new Uint8Array(e),iv:o,keySize:n||128}})}},{key:"unwrapKey",value:function(t,n,r,i){var o=this;return this.checkRaw(this,this.key).then(function(e){return crypto.subtle.unwrapKey(i||"raw",t,e,{name:o.mode||"aes-gcm",iv:n,additionalData:a.toArray("")},{name:o.mode||"aes-gcm",length:r||128},!0,["encrypt","decrypt"])})}},{key:"additionalData",get:function(){return this._additionalData},set:function(e){if("string"!=typeof e)throw new Error("You did not provide a string for additional data, default value is ''.");this._additionalData=e}},{key:"key",get:function(){return this._key},set:function(e){this._key=e}},{key:"mode",get:function(){return this._mode},set:function(e){if(!i.includes(e))throw new Error("Accepted modes are "+i.join(", "));this._mode=e}},{key:"keySize",get:function(){return this._keySize},set:function(e){if(!o.includes(e))throw new Error("Accepted keySize are "+o.join(", "));this._keySize=e}}]),t}();t.exports.AES=c,t.exports.aesModes={CBC:"aes-cbc",GCM:"aes-gcm",CTR:"aes-ctr"}},{"./utils.js":5}],2:[function(e,t,n){"use strict";var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var i=["P-256","P-384","P-521"],o=["ECDH","ECDSA"],a=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e.name||"ECDH",this.curve=e.curve||"P-384",this.hash=e.hash||"SHA-256",this.publicKey=null,this.privateKey=null}return r(t,[{key:"genECKeyPair",value:function(){var t=this;return crypto.subtle.generateKey({name:this.name,namedCurve:this.curve},!1,"ECDH"===this.name?["deriveKey","deriveBits"]:["sign","verify"]).then(function(e){return t.publicKey=e.publicKey,t.privateKey=e.privateKey,e}).catch(function(e){throw 9===e.code?new Error("WebCrypto API error :\n - During ECDH key generation: given namedCurve parameter is not accepted"):new Error(e)})}},{key:"checkRaw",value:function(n,r){return new Promise(function(e,t){r instanceof Uint8Array?n.importKeyRaw(r).then(e):e(r)})}},{key:"deriveKeyECDH",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"aes-gcm",n=this,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:128,i=arguments[3];return this.checkRaw(this,e).then(function(e){return crypto.subtle.deriveKey({name:n.name,public:e},i||n.privateKey,{name:t,length:r},!0,["decrypt","encrypt"])}).then(function(e){return crypto.subtle.exportKey("raw",e)}).then(function(e){return new Uint8Array(e)})}},{key:"exportKeyRaw",value:function(e){return crypto.subtle.exportKey("raw",e||this.publicKey).then(function(e){return new Uint8Array(e)})}},{key:"importKeyRaw",value:function(e,t,n){return crypto.subtle.importKey("raw",e,{name:n||this.name,namedCurve:t||this.curve},!0,[])}},{key:"signEC",value:function(e,t,n){return crypto.subtle.sign({name:"ECDSA",hash:{name:n||this.hash}},t||this.privateKey,e).then(function(e){return new Uint8Array(e)})}},{key:"verifEC",value:function(e,t,n,r){return crypto.subtle.verify({name:"ECDSA",hash:{name:r||this.hash}},e,t,n)}},{key:"curve",get:function(){return this._curve},set:function(e){if(!i.includes(e))throw new Error("Accepted curves are "+i.join(", "));this._curve=e}},{key:"name",get:function(){return this._name},set:function(e){if(!o.includes(e))throw new Error("Accepted names are "+o.join(", "));this._name=e}}]),t}();t.exports.EC=a},{}],3:[function(e,t,n){"use strict";var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var i=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.modulusLength=e.modulusLength||4096,this.hash=e.hash||"SHA-256",this.name=e.name||"RSA-PSS",this.publicKey=null,this.privateKey=null}return r(t,[{key:"genRSAKeyPair",value:function(){var t=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:4096;return crypto.subtle.generateKey({name:"RSA-PSS",modulusLength:e,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!1,["sign","verify"]).then(function(e){return t._publicKey=e.publicKey,t._privateKey=e.privateKey,e})}},{key:"verifRSA",value:function(e,t,n){return crypto.subtle.verify({name:"RSA-PSS",saltLength:16},e,t,n)}},{key:"signRSA",value:function(e,t){return crypto.subtle.sign({name:"RSA-PSS",saltLength:16},t||this.privateKey,e).then(function(e){return new Uint8Array(e)})}},{key:"importRSAPubKey",value:function(e,t,n){return crypto.subtle.importKey("jwk",{kty:e.kty,e:e.e,n:e.n,alg:e.alg,ext:e.ext},{name:t||"RSA-PSS",hash:{name:n||"SHA-256"}},!1,["verify"])}},{key:"exportRSAPubKey",value:function(e,t){return crypto.subtle.exportKey(t||"jwk",e||this.publicKey)}},{key:"publicKey",get:function(){return this._publicKey},set:function(e){this._publicKey=e}},{key:"privateKey",get:function(){return this._privateKey},set:function(e){this._privateKey=e}}]),t}();t.exports.RSA=i},{}],4:[function(e,t,n){"use strict";var r=u(e("./AES")),i=u(e("./EC")),o=u(e("./RSA")),a=u(e("./utils"));function u(e){return e&&e.__esModule?e:{default:e}}t.exports.AES=r.default.AES,t.exports.aesModes=r.default.aesModes,t.exports.EC=i.default.EC,t.exports.RSA=o.default.RSA,t.exports.utils=a.default},{"./AES":1,"./EC":2,"./RSA":3,"./utils":5}],5:[function(e,t,n){"use strict";var r=function(e){if("string"!=typeof e)throw new Error("Not a string");for(var t=[],n=0;n<e.length;++n)t.push(e.charCodeAt(n));return new Uint8Array(t)},i=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"aes-gcm",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:128;return crypto.subtle.generateKey({name:e,length:t},!0,["decrypt","encrypt"])};t.exports={toArray:r,bufferToHexString:function(e){if(!e)return null;for(var t=[],n=0;n<e.length;++n){var r=e[n].toString(16);r.length<2&&(r="0"+r),t.push(r)}return t.join("")},toString:function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},hexStringToBuffer:function(e){if(e.length%2!=0)throw new Error("Invalid hexString");for(var t=new Uint8Array(e.length/2),n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);if(isNaN(r))throw new Error("Invalid hexString");t[n/2]=r}return t},deriveKey:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1e4;return n<1e4&&console.warn("The iteration number is less than 10000, increase it !"),crypto.subtle.importKey("raw","string"==typeof e?r(e):e,"PBKDF2",!1,["deriveBits","deriveKey"]).then(function(e){return crypto.subtle.deriveBits({name:"PBKDF2",salt:t||new Uint8Array([]),iterations:n,hash:"sha-256"},e,128)}).then(function(e){return new Uint8Array(e)})},randomString:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:18,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n="";if(!window.crypto||!window.crypto.getRandomValues)throw new Error("Your browser can't generate secure random numbers");var r=new Uint32Array(e);window.crypto.getRandomValues(r);for(var i=0;i<e;i++)n+=t[r[i]%t.length];return n},hash:function(e){1<arguments.length&&void 0!==arguments[1]&&arguments[1];return window.crypto.subtle.digest({name:"SHA-256"},"string"==typeof passPhrase?r(e):e).then(function(e){return new Uint8Array(e)})},genAESKey:i,genAESKeyRaw:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"aes-gcm",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:128;return i(e,t).then(function(e){return crypto.subtle.exportKey("raw",e).then(function(e){return new Uint8Array(e)})})}}},{}]},{},[4])(4)});